{"version":3,"sources":["pages/Register/RegisterPage.module.css","pages/Register/RegisterPage.js"],"names":["module","exports","mapDispatchToProps","onRegister","authOperations","register","connect","useState","name","email","password","user","setUser","handleChange","event","preventDefault","target","value","prev","Form","onSubmit","className","styles","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,6B,6KC4EzB,IAAMC,EAAqB,CACzBC,WAAYC,IAAeC,UAGdC,cAAQ,KAAMJ,EAAdI,EA1Ef,YAAuC,IAAfH,EAAc,EAAdA,WAAc,EACZI,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAD9B,mBAC7BC,EAD6B,KACvBC,EADuB,KAc9BC,EAAe,SAAAC,GACnBA,EAAMC,iBADsB,MAEJD,EAAME,OAAtBR,EAFoB,EAEpBA,KAAMS,EAFc,EAEdA,MACdL,GAAQ,SAAAM,GAAI,kCAAUA,GAAV,kBAAiBV,EAAOS,QAStC,OACE,qCACE,mDACA,eAACE,EAAA,EAAD,CAAMC,SATW,SAAAN,GACnBA,EAAMC,iBACNZ,EAAWQ,GAlBXC,EAAQ,CACNJ,KAAM,GACNC,MAAO,GACPC,SAAU,MAsBoBW,UAAWC,IAAOH,KAAhD,UACE,eAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,mBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLnB,KAAK,OACLS,MAAON,EAAKH,KACZoB,YAAY,aACZC,SAAUhB,OAId,eAACM,EAAA,EAAKI,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,4BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,QACLnB,KAAK,QACLS,MAAON,EAAKF,MACZmB,YAAY,cACZC,SAAUhB,OAId,eAACM,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,WACLnB,KAAK,WACLoB,YAAY,iBACZX,MAAON,EAAKD,SACZmB,SAAUhB,OAGd,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B","file":"static/js/7.121573d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"RegisterPage_Form__14G3_\"};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport styles from './RegisterPage.module.css';\r\n\r\nfunction RegisterPage({ onRegister }) {\r\n  const [user, setUser] = useState({ name: '', email: '', password: '' });\r\n\r\n  const reset = () => {\r\n    setUser({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  // const onRegister = () => dispatch(authOperations.register);\r\n  const handleChange = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    setUser(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onRegister(user);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Registration page</h2>\r\n      <Form onSubmit={handleSubmit} className={styles.Form}>\r\n        <Form.Group controlId=\"formBasicName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={user.name}\r\n            placeholder=\"Enter name\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            placeholder=\"Enter email\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);\r\n"],"sourceRoot":""}